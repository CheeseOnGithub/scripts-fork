local events = game:GetService("ReplicatedStorage").Communication.Events
local functions = game:GetService("ReplicatedStorage").Communication.Functions
for i,v in pairs(getgc(true)) do
    if typeof(v) == 'table' and rawget(v, 'getIsBodyMoverCreatedByGame') then
         v.getIsBodyMoverCreatedByGame = function(gg)
             return true
         end
    end
    if typeof(v) == 'table' and rawget(v, 'kick') then
         v.kick = function() return wait(9e9) end
    end
    if typeof(v) == 'table' and rawget(v, 'randomDelayKick') then
         v.randomDelayKick = function() return wait(9e9) end
    end
    if typeof(v) == 'table' and rawget(v, 'connectCharacter') then
         v.connectCharacter = function(gg) return wait(9e9) end
    end
    if typeof(v) == "table" and rawget(v,"Remote") then
        v.Remote.Name = v.Name
    end
end
local oldnamecall; oldnamecall = hookmetamethod(game, "__namecall", function(self, ...)
    local args = {...}
    local method = getnamecallmethod();
  
    if (method == "Kick" or method == "kick") and self == game.Players.LocalPlayer then
        return;
    end
  
    return oldnamecall(self, unpack(args))
end)
local newindex
newindex = hookmetamethod(game, "__namecall", function(self, ...)
    local howcalledomg = getnamecallmethod()
    local whataretheargs = {...}
    if not checkcaller() and self.Name == "StartFallDamage" or self.Name == "TakeFallDamage"  and howcalledomg == "FireServer" then
        return wait(9e9)
    end
    return newindex(self, ...)
end)
for i = 1, 25 do -- inf jump bypass
    events.StartFastRespawn:FireServer()
    functions.CompleteFastRespawn:FireServer()
    wait()
end
events.SpawnCharacter:FireServer()
wait(1)
